# bash completion for buildah                              -*- shell-script -*-

__buildah_debug()
{
    if [[ -n ${BASH_COMP_DEBUG_FILE} ]]; then
        echo "$*" >> "${BASH_COMP_DEBUG_FILE}"
    fi
}

# Homebrew on Macs have version 1.3 of bash-completion which doesn't include
# _init_completion. This is a very minimal version of that function.
__buildah_init_completion()
{
    COMPREPLY=()
    _get_comp_words_by_ref "$@" cur prev words cword
}

__buildah_index_of_word()
{
    local w word=$1
    shift
    index=0
    for w in "$@"; do
        [[ $w = "$word" ]] && return
        index=$((index+1))
    done
    index=-1
}

__buildah_contains_word()
{
    local w word=$1; shift
    for w in "$@"; do
        [[ $w = "$word" ]] && return
    done
    return 1
}

__buildah_handle_reply()
{
    __buildah_debug "${FUNCNAME[0]}"
    case $cur in
        -*)
            if [[ $(type -t compopt) = "builtin" ]]; then
                compopt -o nospace
            fi
            local allflags
            if [ ${#must_have_one_flag[@]} -ne 0 ]; then
                allflags=("${must_have_one_flag[@]}")
            else
                allflags=("${flags[*]} ${two_word_flags[*]}")
            fi
            COMPREPLY=( $(compgen -W "${allflags[*]}" -- "$cur") )
            if [[ $(type -t compopt) = "builtin" ]]; then
                [[ "${COMPREPLY[0]}" == *= ]] || compopt +o nospace
            fi

            # complete after --flag=abc
            if [[ $cur == *=* ]]; then
                if [[ $(type -t compopt) = "builtin" ]]; then
                    compopt +o nospace
                fi

                local index flag
                flag="${cur%=*}"
                __buildah_index_of_word "${flag}" "${flags_with_completion[@]}"
                COMPREPLY=()
                if [[ ${index} -ge 0 ]]; then
                    PREFIX=""
                    cur="${cur#*=}"
                    ${flags_completion[${index}]}
                    if [ -n "${ZSH_VERSION}" ]; then
                        # zsh completion needs --flag= prefix
                        eval "COMPREPLY=( \"\${COMPREPLY[@]/#/${flag}=}\" )"
                    fi
                fi
            fi
            return 0;
            ;;
    esac

    # check if we are handling a flag with special work handling
    local index
    __buildah_index_of_word "${prev}" "${flags_with_completion[@]}"
    if [[ ${index} -ge 0 ]]; then
        ${flags_completion[${index}]}
        return
    fi

    # we are parsing a flag and don't have a special handler, no completion
    if [[ ${cur} != "${words[cword]}" ]]; then
        return
    fi

    local completions
    completions=("${commands[@]}")
    if [[ ${#must_have_one_noun[@]} -ne 0 ]]; then
        completions=("${must_have_one_noun[@]}")
    fi
    if [[ ${#must_have_one_flag[@]} -ne 0 ]]; then
        completions+=("${must_have_one_flag[@]}")
    fi
    COMPREPLY=( $(compgen -W "${completions[*]}" -- "$cur") )

    if [[ ${#COMPREPLY[@]} -eq 0 && ${#noun_aliases[@]} -gt 0 && ${#must_have_one_noun[@]} -ne 0 ]]; then
        COMPREPLY=( $(compgen -W "${noun_aliases[*]}" -- "$cur") )
    fi

    if [[ ${#COMPREPLY[@]} -eq 0 ]]; then
		if declare -F __buildah_custom_func >/dev/null; then
			# try command name qualified custom func
			__buildah_custom_func
		else
			# otherwise fall back to unqualified for compatibility
			declare -F __custom_func >/dev/null && __custom_func
		fi
    fi

    # available in bash-completion >= 2, not always present on macOS
    if declare -F __ltrim_colon_completions >/dev/null; then
        __ltrim_colon_completions "$cur"
    fi

    # If there is only 1 completion and it is a flag with an = it will be completed
    # but we don't want a space after the =
    if [[ "${#COMPREPLY[@]}" -eq "1" ]] && [[ $(type -t compopt) = "builtin" ]] && [[ "${COMPREPLY[0]}" == --*= ]]; then
       compopt -o nospace
    fi
}

# The arguments should be in the form "ext1|ext2|extn"
__buildah_handle_filename_extension_flag()
{
    local ext="$1"
    _filedir "@(${ext})"
}

__buildah_handle_subdirs_in_dir_flag()
{
    local dir="$1"
    pushd "${dir}" >/dev/null 2>&1 && _filedir -d && popd >/dev/null 2>&1
}

__buildah_handle_flag()
{
    __buildah_debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    # if a command required a flag, and we found it, unset must_have_one_flag()
    local flagname=${words[c]}
    local flagvalue
    # if the word contained an =
    if [[ ${words[c]} == *"="* ]]; then
        flagvalue=${flagname#*=} # take in as flagvalue after the =
        flagname=${flagname%=*} # strip everything after the =
        flagname="${flagname}=" # but put the = back
    fi
    __buildah_debug "${FUNCNAME[0]}: looking for ${flagname}"
    if __buildah_contains_word "${flagname}" "${must_have_one_flag[@]}"; then
        must_have_one_flag=()
    fi

    # if you set a flag which only applies to this command, don't show subcommands
    if __buildah_contains_word "${flagname}" "${local_nonpersistent_flags[@]}"; then
      commands=()
    fi

    # keep flag value with flagname as flaghash
    # flaghash variable is an associative array which is only supported in bash > 3.
    if [[ -z "${BASH_VERSION}" || "${BASH_VERSINFO[0]}" -gt 3 ]]; then
        if [ -n "${flagvalue}" ] ; then
            flaghash[${flagname}]=${flagvalue}
        elif [ -n "${words[ $((c+1)) ]}" ] ; then
            flaghash[${flagname}]=${words[ $((c+1)) ]}
        else
            flaghash[${flagname}]="true" # pad "true" for bool flag
        fi
    fi

    # skip the argument to a two word flag
    if [[ ${words[c]} != *"="* ]] && __buildah_contains_word "${words[c]}" "${two_word_flags[@]}"; then
			  __buildah_debug "${FUNCNAME[0]}: found a flag ${words[c]}, skip the next argument"
        c=$((c+1))
        # if we are looking for a flags value, don't show commands
        if [[ $c -eq $cword ]]; then
            commands=()
        fi
    fi

    c=$((c+1))

}

__buildah_handle_noun()
{
    __buildah_debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    if __buildah_contains_word "${words[c]}" "${must_have_one_noun[@]}"; then
        must_have_one_noun=()
    elif __buildah_contains_word "${words[c]}" "${noun_aliases[@]}"; then
        must_have_one_noun=()
    fi

    nouns+=("${words[c]}")
    c=$((c+1))
}

__buildah_handle_command()
{
    __buildah_debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    local next_command
    if [[ -n ${last_command} ]]; then
        next_command="_${last_command}_${words[c]//:/__}"
    else
        if [[ $c -eq 0 ]]; then
            next_command="_buildah_root_command"
        else
            next_command="_${words[c]//:/__}"
        fi
    fi
    c=$((c+1))
    __buildah_debug "${FUNCNAME[0]}: looking for ${next_command}"
    declare -F "$next_command" >/dev/null && $next_command
}

__buildah_handle_word()
{
    if [[ $c -ge $cword ]]; then
        __buildah_handle_reply
        return
    fi
    __buildah_debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"
    if [[ "${words[c]}" == -* ]]; then
        __buildah_handle_flag
    elif __buildah_contains_word "${words[c]}" "${commands[@]}"; then
        __buildah_handle_command
    elif [[ $c -eq 0 ]]; then
        __buildah_handle_command
    elif __buildah_contains_word "${words[c]}" "${command_aliases[@]}"; then
        # aliashash variable is an associative array which is only supported in bash > 3.
        if [[ -z "${BASH_VERSION}" || "${BASH_VERSINFO[0]}" -gt 3 ]]; then
            words[c]=${aliashash[${words[c]}]}
            __buildah_handle_command
        else
            __buildah_handle_noun
        fi
    else
        __buildah_handle_noun
    fi
    __buildah_handle_word
}

_buildah_add()
{
    last_command="buildah_add"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--add-history")
    local_nonpersistent_flags+=("--add-history")
    flags+=("--chown=")
    two_word_flags+=("--chown")
    local_nonpersistent_flags+=("--chown=")
    flags+=("--quiet")
    flags+=("-q")
    local_nonpersistent_flags+=("--quiet")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_build-using-dockerfile()
{
    last_command="buildah_build-using-dockerfile"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--add-host=")
    two_word_flags+=("--add-host")
    local_nonpersistent_flags+=("--add-host=")
    flags+=("--annotation=")
    two_word_flags+=("--annotation")
    local_nonpersistent_flags+=("--annotation=")
    flags+=("--arch=")
    two_word_flags+=("--arch")
    local_nonpersistent_flags+=("--arch=")
    flags+=("--authfile=")
    two_word_flags+=("--authfile")
    local_nonpersistent_flags+=("--authfile=")
    flags+=("--build-arg=")
    two_word_flags+=("--build-arg")
    local_nonpersistent_flags+=("--build-arg=")
    flags+=("--cache-from=")
    two_word_flags+=("--cache-from")
    local_nonpersistent_flags+=("--cache-from=")
    flags+=("--cap-add=")
    two_word_flags+=("--cap-add")
    local_nonpersistent_flags+=("--cap-add=")
    flags+=("--cap-drop=")
    two_word_flags+=("--cap-drop")
    local_nonpersistent_flags+=("--cap-drop=")
    flags+=("--cert-dir=")
    two_word_flags+=("--cert-dir")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--cgroup-parent=")
    two_word_flags+=("--cgroup-parent")
    local_nonpersistent_flags+=("--cgroup-parent=")
    flags+=("--cni-config-dir=")
    two_word_flags+=("--cni-config-dir")
    local_nonpersistent_flags+=("--cni-config-dir=")
    flags+=("--cni-plugin-path=")
    two_word_flags+=("--cni-plugin-path")
    local_nonpersistent_flags+=("--cni-plugin-path=")
    flags+=("--compress")
    local_nonpersistent_flags+=("--compress")
    flags+=("--cpu-period=")
    two_word_flags+=("--cpu-period")
    local_nonpersistent_flags+=("--cpu-period=")
    flags+=("--cpu-quota=")
    two_word_flags+=("--cpu-quota")
    local_nonpersistent_flags+=("--cpu-quota=")
    flags+=("--cpu-shares=")
    two_word_flags+=("--cpu-shares")
    two_word_flags+=("-c")
    local_nonpersistent_flags+=("--cpu-shares=")
    flags+=("--cpuset-cpus=")
    two_word_flags+=("--cpuset-cpus")
    local_nonpersistent_flags+=("--cpuset-cpus=")
    flags+=("--cpuset-mems=")
    two_word_flags+=("--cpuset-mems")
    local_nonpersistent_flags+=("--cpuset-mems=")
    flags+=("--creds=")
    two_word_flags+=("--creds")
    local_nonpersistent_flags+=("--creds=")
    flags+=("--device=")
    two_word_flags+=("--device")
    local_nonpersistent_flags+=("--device=")
    flags+=("--disable-compression")
    flags+=("-D")
    local_nonpersistent_flags+=("--disable-compression")
    flags+=("--disable-content-trust")
    local_nonpersistent_flags+=("--disable-content-trust")
    flags+=("--dns=")
    two_word_flags+=("--dns")
    local_nonpersistent_flags+=("--dns=")
    flags+=("--dns-option=")
    two_word_flags+=("--dns-option")
    local_nonpersistent_flags+=("--dns-option=")
    flags+=("--dns-search=")
    two_word_flags+=("--dns-search")
    local_nonpersistent_flags+=("--dns-search=")
    flags+=("--file=")
    two_word_flags+=("--file")
    two_word_flags+=("-f")
    local_nonpersistent_flags+=("--file=")
    flags+=("--force-rm")
    local_nonpersistent_flags+=("--force-rm")
    flags+=("--format=")
    two_word_flags+=("--format")
    local_nonpersistent_flags+=("--format=")
    flags+=("--http-proxy")
    local_nonpersistent_flags+=("--http-proxy")
    flags+=("--iidfile=")
    two_word_flags+=("--iidfile")
    local_nonpersistent_flags+=("--iidfile=")
    flags+=("--ipc=")
    two_word_flags+=("--ipc")
    local_nonpersistent_flags+=("--ipc=")
    flags+=("--isolation=")
    two_word_flags+=("--isolation")
    local_nonpersistent_flags+=("--isolation=")
    flags+=("--label=")
    two_word_flags+=("--label")
    local_nonpersistent_flags+=("--label=")
    flags+=("--layers")
    local_nonpersistent_flags+=("--layers")
    flags+=("--logfile=")
    two_word_flags+=("--logfile")
    local_nonpersistent_flags+=("--logfile=")
    flags+=("--loglevel=")
    two_word_flags+=("--loglevel")
    local_nonpersistent_flags+=("--loglevel=")
    flags+=("--memory=")
    two_word_flags+=("--memory")
    two_word_flags+=("-m")
    local_nonpersistent_flags+=("--memory=")
    flags+=("--memory-swap=")
    two_word_flags+=("--memory-swap")
    local_nonpersistent_flags+=("--memory-swap=")
    flags+=("--network=")
    two_word_flags+=("--network")
    local_nonpersistent_flags+=("--network=")
    flags+=("--no-cache")
    local_nonpersistent_flags+=("--no-cache")
    flags+=("--os=")
    two_word_flags+=("--os")
    local_nonpersistent_flags+=("--os=")
    flags+=("--pid=")
    two_word_flags+=("--pid")
    local_nonpersistent_flags+=("--pid=")
    flags+=("--platform=")
    two_word_flags+=("--platform")
    local_nonpersistent_flags+=("--platform=")
    flags+=("--pull")
    local_nonpersistent_flags+=("--pull")
    flags+=("--pull-always")
    local_nonpersistent_flags+=("--pull-always")
    flags+=("--pull-never")
    local_nonpersistent_flags+=("--pull-never")
    flags+=("--quiet")
    flags+=("-q")
    local_nonpersistent_flags+=("--quiet")
    flags+=("--rm")
    local_nonpersistent_flags+=("--rm")
    flags+=("--runtime=")
    two_word_flags+=("--runtime")
    local_nonpersistent_flags+=("--runtime=")
    flags+=("--runtime-flag=")
    two_word_flags+=("--runtime-flag")
    local_nonpersistent_flags+=("--runtime-flag=")
    flags+=("--security-opt=")
    two_word_flags+=("--security-opt")
    local_nonpersistent_flags+=("--security-opt=")
    flags+=("--shm-size=")
    two_word_flags+=("--shm-size")
    local_nonpersistent_flags+=("--shm-size=")
    flags+=("--sign-by=")
    two_word_flags+=("--sign-by")
    local_nonpersistent_flags+=("--sign-by=")
    flags+=("--signature-policy=")
    two_word_flags+=("--signature-policy")
    local_nonpersistent_flags+=("--signature-policy=")
    flags+=("--squash")
    local_nonpersistent_flags+=("--squash")
    flags+=("--tag=")
    two_word_flags+=("--tag")
    two_word_flags+=("-t")
    local_nonpersistent_flags+=("--tag=")
    flags+=("--target=")
    two_word_flags+=("--target")
    local_nonpersistent_flags+=("--target=")
    flags+=("--tls-verify")
    local_nonpersistent_flags+=("--tls-verify")
    flags+=("--ulimit=")
    two_word_flags+=("--ulimit")
    local_nonpersistent_flags+=("--ulimit=")
    flags+=("--userns=")
    two_word_flags+=("--userns")
    local_nonpersistent_flags+=("--userns=")
    flags+=("--userns-gid-map-group=")
    two_word_flags+=("--userns-gid-map-group")
    local_nonpersistent_flags+=("--userns-gid-map-group=")
    flags+=("--userns-uid-map-user=")
    two_word_flags+=("--userns-uid-map-user")
    local_nonpersistent_flags+=("--userns-uid-map-user=")
    flags+=("--uts=")
    two_word_flags+=("--uts")
    local_nonpersistent_flags+=("--uts=")
    flags+=("--volume=")
    two_word_flags+=("--volume")
    two_word_flags+=("-v")
    local_nonpersistent_flags+=("--volume=")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_commit()
{
    last_command="buildah_commit"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--authfile=")
    two_word_flags+=("--authfile")
    local_nonpersistent_flags+=("--authfile=")
    flags+=("--cert-dir=")
    two_word_flags+=("--cert-dir")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--creds=")
    two_word_flags+=("--creds")
    local_nonpersistent_flags+=("--creds=")
    flags+=("--disable-compression")
    flags+=("-D")
    local_nonpersistent_flags+=("--disable-compression")
    flags+=("--format=")
    two_word_flags+=("--format")
    two_word_flags+=("-f")
    local_nonpersistent_flags+=("--format=")
    flags+=("--iidfile=")
    two_word_flags+=("--iidfile")
    local_nonpersistent_flags+=("--iidfile=")
    flags+=("--omit-timestamp")
    local_nonpersistent_flags+=("--omit-timestamp")
    flags+=("--quiet")
    flags+=("-q")
    local_nonpersistent_flags+=("--quiet")
    flags+=("--rm")
    local_nonpersistent_flags+=("--rm")
    flags+=("--sign-by=")
    two_word_flags+=("--sign-by")
    local_nonpersistent_flags+=("--sign-by=")
    flags+=("--squash")
    local_nonpersistent_flags+=("--squash")
    flags+=("--tls-verify")
    local_nonpersistent_flags+=("--tls-verify")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_config()
{
    last_command="buildah_config"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--add-history")
    local_nonpersistent_flags+=("--add-history")
    flags+=("--annotation=")
    two_word_flags+=("--annotation")
    two_word_flags+=("-a")
    local_nonpersistent_flags+=("--annotation=")
    flags+=("--arch=")
    two_word_flags+=("--arch")
    local_nonpersistent_flags+=("--arch=")
    flags+=("--author=")
    two_word_flags+=("--author")
    local_nonpersistent_flags+=("--author=")
    flags+=("--cmd=")
    two_word_flags+=("--cmd")
    local_nonpersistent_flags+=("--cmd=")
    flags+=("--comment=")
    two_word_flags+=("--comment")
    local_nonpersistent_flags+=("--comment=")
    flags+=("--created-by=")
    two_word_flags+=("--created-by")
    local_nonpersistent_flags+=("--created-by=")
    flags+=("--domainname=")
    two_word_flags+=("--domainname")
    local_nonpersistent_flags+=("--domainname=")
    flags+=("--entrypoint=")
    two_word_flags+=("--entrypoint")
    local_nonpersistent_flags+=("--entrypoint=")
    flags+=("--env=")
    two_word_flags+=("--env")
    two_word_flags+=("-e")
    local_nonpersistent_flags+=("--env=")
    flags+=("--healthcheck=")
    two_word_flags+=("--healthcheck")
    local_nonpersistent_flags+=("--healthcheck=")
    flags+=("--healthcheck-interval=")
    two_word_flags+=("--healthcheck-interval")
    local_nonpersistent_flags+=("--healthcheck-interval=")
    flags+=("--healthcheck-retries=")
    two_word_flags+=("--healthcheck-retries")
    local_nonpersistent_flags+=("--healthcheck-retries=")
    flags+=("--healthcheck-start-period=")
    two_word_flags+=("--healthcheck-start-period")
    local_nonpersistent_flags+=("--healthcheck-start-period=")
    flags+=("--healthcheck-timeout=")
    two_word_flags+=("--healthcheck-timeout")
    local_nonpersistent_flags+=("--healthcheck-timeout=")
    flags+=("--history-comment=")
    two_word_flags+=("--history-comment")
    local_nonpersistent_flags+=("--history-comment=")
    flags+=("--hostname=")
    two_word_flags+=("--hostname")
    local_nonpersistent_flags+=("--hostname=")
    flags+=("--label=")
    two_word_flags+=("--label")
    two_word_flags+=("-l")
    local_nonpersistent_flags+=("--label=")
    flags+=("--onbuild=")
    two_word_flags+=("--onbuild")
    local_nonpersistent_flags+=("--onbuild=")
    flags+=("--os=")
    two_word_flags+=("--os")
    local_nonpersistent_flags+=("--os=")
    flags+=("--port=")
    two_word_flags+=("--port")
    two_word_flags+=("-p")
    local_nonpersistent_flags+=("--port=")
    flags+=("--shell=")
    two_word_flags+=("--shell")
    local_nonpersistent_flags+=("--shell=")
    flags+=("--stop-signal=")
    two_word_flags+=("--stop-signal")
    local_nonpersistent_flags+=("--stop-signal=")
    flags+=("--user=")
    two_word_flags+=("--user")
    two_word_flags+=("-u")
    local_nonpersistent_flags+=("--user=")
    flags+=("--volume=")
    two_word_flags+=("--volume")
    two_word_flags+=("-v")
    local_nonpersistent_flags+=("--volume=")
    flags+=("--workingdir=")
    two_word_flags+=("--workingdir")
    local_nonpersistent_flags+=("--workingdir=")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_containers()
{
    last_command="buildah_containers"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--all")
    flags+=("-a")
    local_nonpersistent_flags+=("--all")
    flags+=("--filter=")
    two_word_flags+=("--filter")
    two_word_flags+=("-f")
    local_nonpersistent_flags+=("--filter=")
    flags+=("--format=")
    two_word_flags+=("--format")
    local_nonpersistent_flags+=("--format=")
    flags+=("--json")
    local_nonpersistent_flags+=("--json")
    flags+=("--noheading")
    flags+=("-n")
    local_nonpersistent_flags+=("--noheading")
    flags+=("--notruncate")
    local_nonpersistent_flags+=("--notruncate")
    flags+=("--quiet")
    flags+=("-q")
    local_nonpersistent_flags+=("--quiet")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_copy()
{
    last_command="buildah_copy"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--add-history")
    local_nonpersistent_flags+=("--add-history")
    flags+=("--chown=")
    two_word_flags+=("--chown")
    local_nonpersistent_flags+=("--chown=")
    flags+=("--quiet")
    flags+=("-q")
    local_nonpersistent_flags+=("--quiet")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_from()
{
    last_command="buildah_from"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--add-host=")
    two_word_flags+=("--add-host")
    local_nonpersistent_flags+=("--add-host=")
    flags+=("--authfile=")
    two_word_flags+=("--authfile")
    local_nonpersistent_flags+=("--authfile=")
    flags+=("--cap-add=")
    two_word_flags+=("--cap-add")
    local_nonpersistent_flags+=("--cap-add=")
    flags+=("--cap-drop=")
    two_word_flags+=("--cap-drop")
    local_nonpersistent_flags+=("--cap-drop=")
    flags+=("--cert-dir=")
    two_word_flags+=("--cert-dir")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--cgroup-parent=")
    two_word_flags+=("--cgroup-parent")
    local_nonpersistent_flags+=("--cgroup-parent=")
    flags+=("--cidfile=")
    two_word_flags+=("--cidfile")
    local_nonpersistent_flags+=("--cidfile=")
    flags+=("--cni-config-dir=")
    two_word_flags+=("--cni-config-dir")
    local_nonpersistent_flags+=("--cni-config-dir=")
    flags+=("--cni-plugin-path=")
    two_word_flags+=("--cni-plugin-path")
    local_nonpersistent_flags+=("--cni-plugin-path=")
    flags+=("--cpu-period=")
    two_word_flags+=("--cpu-period")
    local_nonpersistent_flags+=("--cpu-period=")
    flags+=("--cpu-quota=")
    two_word_flags+=("--cpu-quota")
    local_nonpersistent_flags+=("--cpu-quota=")
    flags+=("--cpu-shares=")
    two_word_flags+=("--cpu-shares")
    two_word_flags+=("-c")
    local_nonpersistent_flags+=("--cpu-shares=")
    flags+=("--cpuset-cpus=")
    two_word_flags+=("--cpuset-cpus")
    local_nonpersistent_flags+=("--cpuset-cpus=")
    flags+=("--cpuset-mems=")
    two_word_flags+=("--cpuset-mems")
    local_nonpersistent_flags+=("--cpuset-mems=")
    flags+=("--creds=")
    two_word_flags+=("--creds")
    local_nonpersistent_flags+=("--creds=")
    flags+=("--device=")
    two_word_flags+=("--device")
    local_nonpersistent_flags+=("--device=")
    flags+=("--dns=")
    two_word_flags+=("--dns")
    local_nonpersistent_flags+=("--dns=")
    flags+=("--dns-option=")
    two_word_flags+=("--dns-option")
    local_nonpersistent_flags+=("--dns-option=")
    flags+=("--dns-search=")
    two_word_flags+=("--dns-search")
    local_nonpersistent_flags+=("--dns-search=")
    flags+=("--format=")
    two_word_flags+=("--format")
    two_word_flags+=("-f")
    local_nonpersistent_flags+=("--format=")
    flags+=("--http-proxy")
    local_nonpersistent_flags+=("--http-proxy")
    flags+=("--ipc=")
    two_word_flags+=("--ipc")
    local_nonpersistent_flags+=("--ipc=")
    flags+=("--isolation=")
    two_word_flags+=("--isolation")
    local_nonpersistent_flags+=("--isolation=")
    flags+=("--memory=")
    two_word_flags+=("--memory")
    two_word_flags+=("-m")
    local_nonpersistent_flags+=("--memory=")
    flags+=("--memory-swap=")
    two_word_flags+=("--memory-swap")
    local_nonpersistent_flags+=("--memory-swap=")
    flags+=("--name=")
    two_word_flags+=("--name")
    local_nonpersistent_flags+=("--name=")
    flags+=("--network=")
    two_word_flags+=("--network")
    local_nonpersistent_flags+=("--network=")
    flags+=("--pid=")
    two_word_flags+=("--pid")
    local_nonpersistent_flags+=("--pid=")
    flags+=("--pull")
    local_nonpersistent_flags+=("--pull")
    flags+=("--pull-always")
    local_nonpersistent_flags+=("--pull-always")
    flags+=("--pull-never")
    local_nonpersistent_flags+=("--pull-never")
    flags+=("--quiet")
    flags+=("-q")
    local_nonpersistent_flags+=("--quiet")
    flags+=("--security-opt=")
    two_word_flags+=("--security-opt")
    local_nonpersistent_flags+=("--security-opt=")
    flags+=("--shm-size=")
    two_word_flags+=("--shm-size")
    local_nonpersistent_flags+=("--shm-size=")
    flags+=("--tls-verify")
    local_nonpersistent_flags+=("--tls-verify")
    flags+=("--ulimit=")
    two_word_flags+=("--ulimit")
    local_nonpersistent_flags+=("--ulimit=")
    flags+=("--userns=")
    two_word_flags+=("--userns")
    local_nonpersistent_flags+=("--userns=")
    flags+=("--userns-gid-map-group=")
    two_word_flags+=("--userns-gid-map-group")
    local_nonpersistent_flags+=("--userns-gid-map-group=")
    flags+=("--userns-uid-map-user=")
    two_word_flags+=("--userns-uid-map-user")
    local_nonpersistent_flags+=("--userns-uid-map-user=")
    flags+=("--uts=")
    two_word_flags+=("--uts")
    local_nonpersistent_flags+=("--uts=")
    flags+=("--volume=")
    two_word_flags+=("--volume")
    two_word_flags+=("-v")
    local_nonpersistent_flags+=("--volume=")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_images()
{
    last_command="buildah_images"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--all")
    flags+=("-a")
    local_nonpersistent_flags+=("--all")
    flags+=("--digests")
    local_nonpersistent_flags+=("--digests")
    flags+=("--filter=")
    two_word_flags+=("--filter")
    two_word_flags+=("-f")
    local_nonpersistent_flags+=("--filter=")
    flags+=("--format=")
    two_word_flags+=("--format")
    local_nonpersistent_flags+=("--format=")
    flags+=("--history")
    local_nonpersistent_flags+=("--history")
    flags+=("--json")
    local_nonpersistent_flags+=("--json")
    flags+=("--no-trunc")
    local_nonpersistent_flags+=("--no-trunc")
    flags+=("--noheading")
    flags+=("-n")
    local_nonpersistent_flags+=("--noheading")
    flags+=("--quiet")
    flags+=("-q")
    local_nonpersistent_flags+=("--quiet")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_info()
{
    last_command="buildah_info"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--format=")
    two_word_flags+=("--format")
    local_nonpersistent_flags+=("--format=")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_inspect()
{
    last_command="buildah_inspect"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--format=")
    two_word_flags+=("--format")
    two_word_flags+=("-f")
    local_nonpersistent_flags+=("--format=")
    flags+=("--type=")
    two_word_flags+=("--type")
    two_word_flags+=("-t")
    local_nonpersistent_flags+=("--type=")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_login()
{
    last_command="buildah_login"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--authfile=")
    two_word_flags+=("--authfile")
    local_nonpersistent_flags+=("--authfile=")
    flags+=("--cert-dir=")
    two_word_flags+=("--cert-dir")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--get-login")
    local_nonpersistent_flags+=("--get-login")
    flags+=("--password=")
    two_word_flags+=("--password")
    two_word_flags+=("-p")
    local_nonpersistent_flags+=("--password=")
    flags+=("--password-stdin")
    local_nonpersistent_flags+=("--password-stdin")
    flags+=("--tls-verify")
    local_nonpersistent_flags+=("--tls-verify")
    flags+=("--username=")
    two_word_flags+=("--username")
    two_word_flags+=("-u")
    local_nonpersistent_flags+=("--username=")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_logout()
{
    last_command="buildah_logout"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--all")
    flags+=("-a")
    local_nonpersistent_flags+=("--all")
    flags+=("--authfile=")
    two_word_flags+=("--authfile")
    local_nonpersistent_flags+=("--authfile=")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_manifest_add()
{
    last_command="buildah_manifest_add"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--all")
    local_nonpersistent_flags+=("--all")
    flags+=("--annotation=")
    two_word_flags+=("--annotation")
    local_nonpersistent_flags+=("--annotation=")
    flags+=("--arch=")
    two_word_flags+=("--arch")
    local_nonpersistent_flags+=("--arch=")
    flags+=("--features=")
    two_word_flags+=("--features")
    local_nonpersistent_flags+=("--features=")
    flags+=("--os=")
    two_word_flags+=("--os")
    local_nonpersistent_flags+=("--os=")
    flags+=("--os-features=")
    two_word_flags+=("--os-features")
    local_nonpersistent_flags+=("--os-features=")
    flags+=("--os-version=")
    two_word_flags+=("--os-version")
    local_nonpersistent_flags+=("--os-version=")
    flags+=("--variant=")
    two_word_flags+=("--variant")
    local_nonpersistent_flags+=("--variant=")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_manifest_annotate()
{
    last_command="buildah_manifest_annotate"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--annotation=")
    two_word_flags+=("--annotation")
    local_nonpersistent_flags+=("--annotation=")
    flags+=("--arch=")
    two_word_flags+=("--arch")
    local_nonpersistent_flags+=("--arch=")
    flags+=("--features=")
    two_word_flags+=("--features")
    local_nonpersistent_flags+=("--features=")
    flags+=("--os=")
    two_word_flags+=("--os")
    local_nonpersistent_flags+=("--os=")
    flags+=("--os-features=")
    two_word_flags+=("--os-features")
    local_nonpersistent_flags+=("--os-features=")
    flags+=("--os-version=")
    two_word_flags+=("--os-version")
    local_nonpersistent_flags+=("--os-version=")
    flags+=("--variant=")
    two_word_flags+=("--variant")
    local_nonpersistent_flags+=("--variant=")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_manifest_create()
{
    last_command="buildah_manifest_create"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--all")
    local_nonpersistent_flags+=("--all")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_manifest_inspect()
{
    last_command="buildah_manifest_inspect"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_manifest_push()
{
    last_command="buildah_manifest_push"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--all")
    local_nonpersistent_flags+=("--all")
    flags+=("--authfile=")
    two_word_flags+=("--authfile")
    local_nonpersistent_flags+=("--authfile=")
    flags+=("--cert-dir=")
    two_word_flags+=("--cert-dir")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--creds=")
    two_word_flags+=("--creds")
    local_nonpersistent_flags+=("--creds=")
    flags+=("--digestfile=")
    two_word_flags+=("--digestfile")
    local_nonpersistent_flags+=("--digestfile=")
    flags+=("--format=")
    two_word_flags+=("--format")
    two_word_flags+=("-f")
    local_nonpersistent_flags+=("--format=")
    flags+=("--purge")
    local_nonpersistent_flags+=("--purge")
    flags+=("--quiet")
    flags+=("-q")
    local_nonpersistent_flags+=("--quiet")
    flags+=("--remove-signatures")
    local_nonpersistent_flags+=("--remove-signatures")
    flags+=("--sign-by=")
    two_word_flags+=("--sign-by")
    local_nonpersistent_flags+=("--sign-by=")
    flags+=("--tls-verify")
    local_nonpersistent_flags+=("--tls-verify")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_manifest_remove()
{
    last_command="buildah_manifest_remove"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_manifest()
{
    last_command="buildah_manifest"

    command_aliases=()

    commands=()
    commands+=("add")
    commands+=("annotate")
    commands+=("create")
    commands+=("inspect")
    commands+=("push")
    commands+=("remove")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_mount()
{
    last_command="buildah_mount"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--notruncate")
    local_nonpersistent_flags+=("--notruncate")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_pull()
{
    last_command="buildah_pull"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--all-tags")
    flags+=("-a")
    local_nonpersistent_flags+=("--all-tags")
    flags+=("--authfile=")
    two_word_flags+=("--authfile")
    local_nonpersistent_flags+=("--authfile=")
    flags+=("--cert-dir=")
    two_word_flags+=("--cert-dir")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--creds=")
    two_word_flags+=("--creds")
    local_nonpersistent_flags+=("--creds=")
    flags+=("--quiet")
    flags+=("-q")
    local_nonpersistent_flags+=("--quiet")
    flags+=("--remove-signatures")
    local_nonpersistent_flags+=("--remove-signatures")
    flags+=("--tls-verify")
    local_nonpersistent_flags+=("--tls-verify")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_push()
{
    last_command="buildah_push"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--authfile=")
    two_word_flags+=("--authfile")
    local_nonpersistent_flags+=("--authfile=")
    flags+=("--cert-dir=")
    two_word_flags+=("--cert-dir")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--creds=")
    two_word_flags+=("--creds")
    local_nonpersistent_flags+=("--creds=")
    flags+=("--digestfile=")
    two_word_flags+=("--digestfile")
    local_nonpersistent_flags+=("--digestfile=")
    flags+=("--disable-compression")
    flags+=("-D")
    local_nonpersistent_flags+=("--disable-compression")
    flags+=("--format=")
    two_word_flags+=("--format")
    two_word_flags+=("-f")
    local_nonpersistent_flags+=("--format=")
    flags+=("--quiet")
    flags+=("-q")
    local_nonpersistent_flags+=("--quiet")
    flags+=("--remove-signatures")
    local_nonpersistent_flags+=("--remove-signatures")
    flags+=("--sign-by=")
    two_word_flags+=("--sign-by")
    local_nonpersistent_flags+=("--sign-by=")
    flags+=("--tls-verify")
    local_nonpersistent_flags+=("--tls-verify")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_rename()
{
    last_command="buildah_rename"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_rm()
{
    last_command="buildah_rm"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--all")
    flags+=("-a")
    local_nonpersistent_flags+=("--all")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_rmi()
{
    last_command="buildah_rmi"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--all")
    flags+=("-a")
    local_nonpersistent_flags+=("--all")
    flags+=("--force")
    flags+=("-f")
    local_nonpersistent_flags+=("--force")
    flags+=("--prune")
    flags+=("-p")
    local_nonpersistent_flags+=("--prune")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_run()
{
    last_command="buildah_run"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--add-history")
    local_nonpersistent_flags+=("--add-history")
    flags+=("--cap-add=")
    two_word_flags+=("--cap-add")
    local_nonpersistent_flags+=("--cap-add=")
    flags+=("--cap-drop=")
    two_word_flags+=("--cap-drop")
    local_nonpersistent_flags+=("--cap-drop=")
    flags+=("--cni-config-dir=")
    two_word_flags+=("--cni-config-dir")
    local_nonpersistent_flags+=("--cni-config-dir=")
    flags+=("--cni-plugin-path=")
    two_word_flags+=("--cni-plugin-path")
    local_nonpersistent_flags+=("--cni-plugin-path=")
    flags+=("--hostname=")
    two_word_flags+=("--hostname")
    local_nonpersistent_flags+=("--hostname=")
    flags+=("--ipc=")
    two_word_flags+=("--ipc")
    local_nonpersistent_flags+=("--ipc=")
    flags+=("--isolation=")
    two_word_flags+=("--isolation")
    local_nonpersistent_flags+=("--isolation=")
    flags+=("--mount=")
    two_word_flags+=("--mount")
    local_nonpersistent_flags+=("--mount=")
    flags+=("--network=")
    two_word_flags+=("--network")
    local_nonpersistent_flags+=("--network=")
    flags+=("--no-pivot")
    local_nonpersistent_flags+=("--no-pivot")
    flags+=("--pid=")
    two_word_flags+=("--pid")
    local_nonpersistent_flags+=("--pid=")
    flags+=("--runtime=")
    two_word_flags+=("--runtime")
    local_nonpersistent_flags+=("--runtime=")
    flags+=("--runtime-flag=")
    two_word_flags+=("--runtime-flag")
    local_nonpersistent_flags+=("--runtime-flag=")
    flags+=("--security-opt=")
    two_word_flags+=("--security-opt")
    local_nonpersistent_flags+=("--security-opt=")
    flags+=("--terminal")
    flags+=("-t")
    local_nonpersistent_flags+=("--terminal")
    flags+=("--user=")
    two_word_flags+=("--user")
    local_nonpersistent_flags+=("--user=")
    flags+=("--uts=")
    two_word_flags+=("--uts")
    local_nonpersistent_flags+=("--uts=")
    flags+=("--volume=")
    two_word_flags+=("--volume")
    two_word_flags+=("-v")
    local_nonpersistent_flags+=("--volume=")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_tag()
{
    last_command="buildah_tag"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_umount()
{
    last_command="buildah_umount"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--all")
    flags+=("-a")
    local_nonpersistent_flags+=("--all")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_unshare()
{
    last_command="buildah_unshare"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mount=")
    two_word_flags+=("--mount")
    local_nonpersistent_flags+=("--mount=")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_version()
{
    last_command="buildah_version"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_buildah_root_command()
{
    last_command="buildah"

    command_aliases=()

    commands=()
    commands+=("add")
    commands+=("build-using-dockerfile")
    if [[ -z "${BASH_VERSION}" || "${BASH_VERSINFO[0]}" -gt 3 ]]; then
        command_aliases+=("bud")
        aliashash["bud"]="build-using-dockerfile"
    fi
    commands+=("commit")
    commands+=("config")
    commands+=("containers")
    if [[ -z "${BASH_VERSION}" || "${BASH_VERSINFO[0]}" -gt 3 ]]; then
        command_aliases+=("list")
        aliashash["list"]="containers"
        command_aliases+=("ls")
        aliashash["ls"]="containers"
        command_aliases+=("ps")
        aliashash["ps"]="containers"
    fi
    commands+=("copy")
    commands+=("from")
    commands+=("images")
    commands+=("info")
    commands+=("inspect")
    commands+=("login")
    commands+=("logout")
    commands+=("manifest")
    commands+=("mount")
    commands+=("pull")
    commands+=("push")
    commands+=("rename")
    commands+=("rm")
    if [[ -z "${BASH_VERSION}" || "${BASH_VERSINFO[0]}" -gt 3 ]]; then
        command_aliases+=("delete")
        aliashash["delete"]="rm"
    fi
    commands+=("rmi")
    commands+=("run")
    commands+=("tag")
    commands+=("umount")
    if [[ -z "${BASH_VERSION}" || "${BASH_VERSINFO[0]}" -gt 3 ]]; then
        command_aliases+=("unmount")
        aliashash["unmount"]="umount"
    fi
    commands+=("unshare")
    commands+=("version")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--registries-conf=")
    two_word_flags+=("--registries-conf")
    flags+=("--registries-conf-dir=")
    two_word_flags+=("--registries-conf-dir")
    flags+=("--root=")
    two_word_flags+=("--root")
    flags+=("--runroot=")
    two_word_flags+=("--runroot")
    flags+=("--storage-driver=")
    two_word_flags+=("--storage-driver")
    flags+=("--storage-opt=")
    two_word_flags+=("--storage-opt")
    flags+=("--userns-gid-map=")
    two_word_flags+=("--userns-gid-map")
    flags+=("--userns-uid-map=")
    two_word_flags+=("--userns-uid-map")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

__start_buildah()
{
    local cur prev words cword
    declare -A flaghash 2>/dev/null || :
    declare -A aliashash 2>/dev/null || :
    if declare -F _init_completion >/dev/null 2>&1; then
        _init_completion -s || return
    else
        __buildah_init_completion -n "=" || return
    fi

    local c=0
    local flags=()
    local two_word_flags=()
    local local_nonpersistent_flags=()
    local flags_with_completion=()
    local flags_completion=()
    local commands=("buildah")
    local must_have_one_flag=()
    local must_have_one_noun=()
    local last_command
    local nouns=()

    __buildah_handle_word
}

if [[ $(type -t compopt) = "builtin" ]]; then
    complete -o default -F __start_buildah buildah
else
    complete -o default -o nospace -F __start_buildah buildah
fi

# ex: ts=4 sw=4 et filetype=sh
