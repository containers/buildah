#!/bin/bash
#
# Intended for use in CI: check git commits, barf if no tests added.
#

# Docs-only changes are excused
if [[ "${CIRRUS_CHANGE_TITLE}" =~ CI:DOCS ]]; then
    exit 0
fi

# So are PRs where 'NO NEW TESTS NEEDED' appears in the Github message
if [[ "${CIRRUS_CHANGE_MESSAGE}" =~ NO.NEW.TESTS.NEEDED ]]; then
    exit 0
fi

# HEAD should be good enough, but the CIRRUS envariable allows us to test
head=${CIRRUS_CHANGE_IN_REPO:-HEAD}
# Base of this PR. Here we absolutely rely on cirrus.
base=$(git merge-base ${GITVALIDATE_EPOCH:-main} $head)

# Sanity check:
if [[ -z "$base" ]]; then
    echo "$(basename $0): internal error: could not determine merge-base"
    echo "   head                  = $head"
    echo "   CIRRUS_CHANGE_IN_REPO = $CIRRUS_CHANGE_IN_REPO"
    echo "   GITVALIDATE_EPOCH     = $GITVALIDATE_EPOCH"
    exit 1
fi

# This gives us a list of files touched in all commits, e.g.
#    A    foo.c
#    M    bar.c
# We look for Added or Modified (not Deleted!) files under 'tests'.
# --no-renames ensures that renamed tests show up as 'A'dded.
if git diff --name-status --no-renames $base $head | egrep -q '^[AM]\s+(tests/|.*_test\.go)'; then
    exit 0
fi

# Nothing changed under test subdirectory.
#
# This is OK if the only files being touched are "safe" ones.
filtered_changes=$(git diff --name-status $base $head   |
                       awk '{print $2}'                 |
                       grep -F -vx .cirrus.yml          |
                       grep -F -vx .packit.yaml         |
                       grep -F -vx .gitignore           |
                       grep -F -vx changelog.txt        |
                       grep -F -vx go.mod               |
                       grep -F -vx go.sum               |
                       grep -F -vx buildah.spec.rpkg    |
                       grep -F -vx .golangci.yml        |
                       grep -F -vx Makefile             |
                       grep -E -v  '^[^/]+\.md$'        |
                       grep -E -v  '^\.github/'         |
                       grep -E -v  '^contrib/'          |
                       grep -E -v  '^docs/'             |
                       grep -E -v  '^hack/'             |
                       grep -E -v  '^nix/'              |
                       grep -E -v  '^vendor/')
if [[ -z "$filtered_changes" ]]; then
    exit 0
fi

# One last chance: perhaps the developer included the magic '[NO TESTS NEEDED]'
# string in an amended commit.
if git log --format=%B ${base}..${head} | fgrep '[NO NEW TESTS NEEDED]'; then
   exit 0
fi
if git log --format=%B ${base}..${head} | fgrep '[NO TESTS NEEDED]'; then
   exit 0
fi

cat <<EOF
$(basename $0): PR does not include changes in the 'tests' directory

Please write a regression test for what you're fixing. Even if it
seems trivial or obvious, try to add a test that will prevent
regressions.

If your change is minor, feel free to piggyback on already-written
tests, possibly just adding a small step to a similar existing test.
Every second counts in CI.

If your commit really, truly does not need tests, you can proceed
by adding '[NO NEW TESTS NEEDED]' to the body of your commit message.
Please think carefully before doing so.
EOF

exit 1
